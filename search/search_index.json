{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HPO Curator","text":"<p>HPO Curator is a tauri{:target=\"_blank\"} app designed to help curate cohorts of individuals with rare genetic disease using the GA4GH Phenopacket Schema{:target=\"_blank\"}.</p> <p>The app is in the very earliest stages of development and not yet ready for use.</p>"},{"location":"developers/","title":"Developers","text":"<p>HPO Curator is a tauri application with a Rust backend and an Angular front end.</p> <p>The application makes major use of the following rust crates.</p> <ul> <li>ontololius{:target=\"_blank\"}</li> <li>rphetools{:target=\"_blank\"}</li> <li>rfenominal{:target=\"_blank\"}</li> </ul> <p>This page summarizes some of the angular and Rust/tauri commands that have been useful to create the application.</p>"},{"location":"developers/#initial-setup","title":"Initial setup","text":"<p>These steps were used to initialize the application and do not need to be repeated</p> <pre><code>npm create tauri@latest\n</code></pre> <p>The installer will ask questions about settings. We chose typescript, angular, npm.</p> <p>Following this, run the following command.</p> <pre><code>npm install\n</code></pre> <p>Note that we are using standalone components.</p>"},{"location":"developers/#run-the-gui-application-in-development-mode","title":"Run the GUI application in development mode","text":"<pre><code>npm run tauri dev\n</code></pre>"},{"location":"developers/#creating-new-components","title":"Creating new components","text":"<p>The standard command for creating a new component called <code>&lt;name&gt;</code> is</p> <pre><code>ng generate component &lt;name&gt; --standalone\n</code></pre> <p>You need to run the Angular CLI command from the root of your Angular project \u2014 the directory that contains the angular.json file. To create a component in a specific path, enter:</p> <pre><code>ng generate component components/hpoloader --standalone --skip-import\n</code></pre> <p>Note that this may not work after updating to nx. In this case, create a directory where you want to put the new component, cd into the directory, and enter this</p> <pre><code>npx nx generate @nx/angular:component hpoloader --standalone\n</code></pre> <p>This will initialize the typical four files for an angular component.</p>"},{"location":"developers/#added-routing","title":"Added routing","text":"<pre><code>ng add @angular/router\n</code></pre>"},{"location":"developers/#angular-material","title":"Angular material","text":"<p>To install</p> <pre><code>npm install @angular/material\n</code></pre>"},{"location":"developers/#set-up-file-system-access","title":"Set up file system access","text":"<p>At the top level of the project, enter</p> <pre><code>npm install @tauri-apps/api\n</code></pre> <p>in the src-tauri folder, enter</p> <pre><code>cargo add tauri-plugin-fs\n</code></pre> <p>In the angular component, add </p> <pre><code>import { open } from '@tauri-apps/api/dialog';\nimport { readTextFile } from '@tauri-apps/api/fs';\n\n</code></pre>"},{"location":"developers/#port-issues","title":"Port issues","text":"<p>If one gets the error message: <code>Port 1420 is already in use</code>, then use the following command to obtain the process ID:</p> <pre><code>lsof -i :1420\nCOMMAND   PID  USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME\nnode    32315 &lt;user&gt;   49u  IPv4 0xd9cc1bb0104a525f      0t0  TCP localhost:timbuktu-srv4 (LISTEN)\n</code></pre> <p>then end the process with</p> <pre><code>kill -9 &lt;PID&gt;\n</code></pre>"},{"location":"developers/#run-in-browser","title":"Run in browser","text":"<p>Can be useful with the DevTools panel</p> <pre><code>npm run start\n</code></pre>"},{"location":"developers/#problems-with-tauriconfjson","title":"Problems with tauri.conf.json","text":"<p>Try to get the latest version</p> <pre><code>cargo install tauri-cli --locked\nnpm install @tauri-apps/cli@latest\n</code></pre> <p>generate a new file</p> <pre><code>cargo tauri init\n</code></pre>"},{"location":"developers/#file-system-tauri-v2","title":"file system (tauri v2)","text":"<p>npm run tauri add fs</p> <p>npm run tauri add dialog</p> <p>.</p>"},{"location":"internal/","title":"Internal","text":"<p>The following commands are used by the development team.</p>"},{"location":"internal/#documentation","title":"Documentation","text":"<p>These pages are generated with mkdocs.</p> <p>To set things up, perform the following steps (substitute name of venv if needed).</p> <pre><code>python3 -m venv venvhpoo\nsource venvhpo/bin/activate\npip install --upgrade pip\npip install mkdocs\npip install mkdocs-material\npip install mkdocs-material[imaging]\npip install pillow cairosvg\npip install mkdocs-material-extensions\npip install mkdocstrings[python]\n</code></pre> <p>To start a local server, enter:</p> <pre><code>mkdocs serve\n</code></pre>"}]}